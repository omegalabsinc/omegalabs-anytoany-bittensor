# Config for single device LoRA finetuning in lora_finetune_single_device.py
# using a Llama3 8B model
#
# This config assumes that you've run the following command before launching
# this run:
#   tune download meta-llama/Meta-Llama-3-8B --output-dir /tmp/Meta-Llama-3-8B --hf-token <HF_TOKEN>
#
# To launch on a single device, run the following command from root:
#   tune run lora_finetune_single_device --config llama3/8B_lora_single_device
#
# You can add specific overrides through the command line. For example
# to override the checkpointer directory while launching training
# you can run:
#   tune run lora_finetune_single_device --config llama3/8B_lora_single_device checkpointer.checkpoint_dir=<YOUR_CHECKPOINT_DIR>
#
# This config works only for training on single device.


# Model Arguments
model:
  _component_: models.lora_mmllama3_8b
  lora_attn_modules: ['q_proj', 'v_proj']
  apply_lora_to_mlp: False
  apply_lora_to_output: False
  lora_rank: 8
  lora_alpha: 16
  perception_tokens: 2
  use_clip: False

# Tokenizer
tokenizer:
  _component_: models.a2a_tokenizer
  path: models/tokenizer.model

checkpointer:
  _component_: torchtune.utils.FullModelMetaCheckpointer
  checkpoint_dir: checkpoints/Meta-Llama-3-8B-Instruct/original
  checkpoint_files: [
    consolidated.00.pth
  ]
  adapter_checkpoint: null
  recipe_checkpoint: null
  output_dir: output/Meta-Llama-3-8B-Instruct/
  model_type: LLAMA3
resume_from_checkpoint: False
interim_checkpoint_steps: 5000

interim_gen_steps: null
max_new_tokens: 100
temperature: 0.6  # 0.8 and 0.6 are popular values to try
top_k: 300

# Dataset and Sampler
dataset:
  _component_: ds.EvenBatcher
  buffer_size: 36
  dataset:
    _component_: ds.RoundRobinDataset
    datasets:
      - _component_: ds.OmegaVideoCaptionDataset
        length: 500000
      - _component_: ds.LlavaInstructDataset
        dataset_path: ds/coco_llava_instruct/output.parquet
        train_on_input: False
      - _component_: ds.LlavaInstructDataset
        dataset_path: ds/vision_flan/output.parquet
        train_on_input: False
      - _component_: ds.CaptionInstructDataset
        dataset_path: ds/sam_llava/output.parquet
        train_on_input: False
      # - _component_: ds.BagelLlama3Dataset
      #   parquet_path: ds/bagel/bagel-input-output-v1.0.parquet
      #   train_on_input: False

seed: null
shuffle: True
batch_size: 4

# Optimizer and Scheduler
optimizer:
  _component_: torch.optim.AdamW
  weight_decay: 0.01
  lr: 3e-4
lr_scheduler:
  _component_: torchtune.modules.get_cosine_schedule_with_warmup
  num_warmup_steps: 100

loss:
  _component_: torch.nn.CrossEntropyLoss

# Training
epochs: 1
max_steps_per_epoch: null
gradient_accumulation_steps: 64
compile: False # not compatible w/ Python 3.12 yet

# Logging
output_dir: /tmp/lora_finetune_output
metric_logger:
  _component_: torchtune.utils.metric_logging.DiskLogger
  log_dir: ${output_dir}
log_every_n_steps: null

# Environment
device: cuda
dtype: bf16
enable_activation_checkpointing: False

# Profiler (disabled)
profiler:
  _component_: torchtune.utils.profiler
  enabled: False

inference:
  prompt_template: "Video:\n{video}\nCaption the previous video."
  max_new_tokens: 300
  temperature: 0.6 # 0.8 and 0.6 are popular values to try
  top_k: 300
  quantizer: null
